from math import exp
from brain import Neuron
A = [0, 1, 0,  1, 0, 1,  1, 1, 1,  1, 0, 1,  1, 0, 1]  # A
H = [1, 0, 1,  1, 0, 1,  1, 1, 1,  1, 0, 1,  1, 0, 1]  # H
E = [1, 1, 1,  1, 0, 0,  1, 1, 0,  1, 0, 0,  1, 1, 1]  # E
F = [1, 1, 1,  1, 0, 0,  1, 1, 0,  1, 0, 0,  1, 0, 0]  # F
C = [0, 1, 1,  1, 0, 0,  1, 0, 0,  1, 0, 0,  0, 1, 1]  # C
G = [0, 1, 1,  1, 0, 0,  1, 0, 1,  1, 0, 1,  0, 1, 1]  # G

data = [A, H, E, F, C, G]
train_d_1 = [1, 1, -1, -1, -1, -1]
train_d_2 = [-1, -1, 1, 1, -1, -1]
train_d_3 = [-1, -1, -1, -1, 1, 1]

#[-0.5684106699266444, -0.8776570477228272, -1.5301426890389138, -0.2600374041991437, 0.0, 1.8877249283634536, -0.2600374041991437, 0.7016946149131258, 1.4293876142574504, -0.2600374041991437, 0.0, 1.4293876142574504, 0.7016946149131258, -1.7194276320021835, 0.16829729636127005]
#[2.161062357631781, 0.5361623807671584, 0.007819455598952238, -0.49218054440104775, 0.0, -1.5283429251682061, -0.49218054440104775, 1.6610623576317813, -1.5283429251682061, -0.49218054440104775, 0.0, -1.5283429251682061, 1.6610623576317813, 0.10181085269783201, -1.4265320724703745]
#[-1.12148487739307, 0.10809124373697473, 0.9357108551824461, 0.10809124373697473, 0.0, -0.8276196114454715, 0.10809124373697473, -1.9491044888385414, -0.1832019178340944, 0.10809124373697473, 0.0, -0.1832019178340944, -1.9491044888385414, 0.9357108551824461, 0.10809124373697473]

w1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
w2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
w3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]






n_1 = Neuron(w1, 0.5, 0.05, 1)
n_2 = Neuron(w2, 0.5, 0.05, 1)
n_3 = Neuron(w3, 0.5, 0.05, 1)
res_1 = 0
res_2 = 0
res_3 = 0
i = 0
while True:
    for i in range(0, len(data)):
        res_1 += n_1.train(data[i], train_d_1[i])
        res_2 += n_2.train(data[i], train_d_2[i])
        res_3 += n_3.train(data[i], train_d_3[i])
    i += 1
    if res_1 >= 24 and res_2 >= 24 and res_3 >= 24:
        break

print(res_1, res_2, res_3)
print(i)

print(n_1.ws)
print(n_2.ws)
print(n_3.ws)

print("\n\n\nПобавимось?\n")
while True:
    symbol = list(input("Дай меніпослідовність бітів, що можуть формувати букву 3х5, а я скажу до якого класу вона відноситься\n:>"))
    class_1 = n_1.think(symbol)
    class_2 = n_2.think(symbol)
    class_3 = n_3.think(symbol)
    if class_1 == 1:
        print("Даний символ відноситься до класу 1: AH")
    elif class_2 == 1:
        print("Даний символ відноситься до класу 2: EF")
    elif class_3 == 1:
        print("Даний символ відноситься до класу 3: CG")